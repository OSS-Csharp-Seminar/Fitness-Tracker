@page "/dashboard"
@rendermode InteractiveServer
@using Application.Interfaces
@using Domain.Entities
@inject IUserService UserService
@inject IWorkoutPlanService WorkoutPlanService
@inject NavigationManager NavigationManager
@layout UserLoginLayout

<PageTitle>Dashboard - PushApps</PageTitle>

<div class="row">
    <div class="col-12">
        <h2 style="color:black; font-weight:bold">Welcome back, @currentUserName! 👋</h2>
        <p class="text-muted">@DateTime.Now.ToString("dddd, MMMM dd, yyyy")</p>
    </div>
</div>

@if (isLoading)
{
    <div class="text-center p-4">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p>Loading your dashboard...</p>
    </div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        <h5>Error</h5>
        <p>@errorMessage</p>
        <button class="btn btn-primary" @onclick="LoadDashboard">Reload</button>
    </div>
}
else
{
    <!-- QUICK ACTIONS -->
    <div class="row mb-4">
        <div class="col-12">
            <h4 style="color:black; font-weight:bold">Quick Actions</h4>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card h-100 border-primary">
                <div class="card-body text-center">
                    <i class="fas fa-dumbbell fa-3x text-primary mb-3"></i>
                    <h5 class="card-title">Start Training</h5>
                    <p class="card-text">Begin your daily workout</p>
                    <button class="btn btn-primary" @onclick="GoToTraining">
                        Start Workout
                    </button>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card h-100 border-success">
                <div class="card-body text-center">
                    <i class="fas fa-chart-line fa-3x text-success mb-3"></i>
                    <h5 class="card-title">View Progress</h5>
                    <p class="card-text">Check your training history</p>
                    <button class="btn btn-success" @onclick="GoToHistory">
                        View History
                    </button>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card h-100 border-warning">
                <div class="card-body text-center">
                    <i class="fas fa-cogs fa-3x text-warning mb-3"></i>
                    <h5 class="card-title">Manage Plans</h5>
                    <p class="card-text">Edit your workout plans</p>
                    <button class="btn btn-warning" @onclick="GoToPlans">
                        My Plans
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- PLAN OVERVIEW -->
    @if (activePlan != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <h4 style="color:black; font-weight:bold">Your Active Plan</h4>
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h5 class="card-title">Current Plan Details</h5>
                                <p><strong>Training Days:</strong> @activePlan.TrainingDays days per week</p>
                                <p><strong>Daily Duration:</strong> @activePlan.TrainingDuration.ToString(@"h\:mm") hours</p>
                                <p><strong>Target Weight:</strong> @activePlan.TargetWeight kg</p>
                                <p><strong>Max Calories:</strong> @activePlan.MaxCalories kcal/day</p>
                            </div>
                            <div class="col-md-6">
                                <h5 class="card-title">Plan Progress</h5>
                                <p><strong>Start Date:</strong> @activePlan.StartDate.ToString("dd/MM/yyyy")</p>
                                <p><strong>Target Date:</strong> @activePlan.TargetDate.ToString("dd/MM/yyyy")</p>
                                <p><strong>Plan Type:</strong> @activePlan.WorkoutPlanType</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- TODAY'S STATUS -->
    <div class="row">
        <div class="col-12">
            <h4 style="color:black; font-weight:bold">Today's Status</h4>
            @if (hasTodayWorkouts)
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    You have workouts scheduled for today. Ready to start training?
                    <button class="btn btn-sm btn-primary ms-2" @onclick="GoToTraining">
                        Start Now
                    </button>
                </div>
            }
            else
            {
                <div class="alert alert-secondary">
                    <i class="fas fa-moon"></i>
                    Today is a rest day according to your plan. Enjoy your recovery time!
                </div>
            }
        </div>
    </div>
}

@code {
    [SupplyParameterFromQuery]
    public string? UserId { get; set; }

    [SupplyParameterFromQuery]
    public string? UserName { get; set; }

    private User currentUser = null;
    private string currentUserName = "";
    private WorkoutPlan activePlan = null;
    private bool hasTodayWorkouts = false;
    private bool isLoading = true;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboard();
    }

    private async Task LoadDashboard()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            // Dohvati korisnika
            if (!string.IsNullOrEmpty(UserId) && Guid.TryParse(UserId, out var userGuid))
            {
                currentUser = await UserService.GetByIdAsync(userGuid);
                currentUserName = UserName ?? currentUser.UserName ?? "User";
            }
            else
            {
                // Pokušaj iz URL-a
                var uri = new Uri(NavigationManager.Uri);
                var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

                if (query.TryGetValue("userId", out var userIdValue) && Guid.TryParse(userIdValue, out userGuid))
                {
                    currentUser = await UserService.GetByIdAsync(userGuid);
                    currentUserName = query.TryGetValue("userName", out var userNameValue) ? userNameValue : currentUser.UserName ?? "User";
                }
                else
                {
                    errorMessage = "User not found. Please log in again.";
                    return;
                }
            }

            // Dohvati aktivni plan
            var userPlans = await WorkoutPlanService.GetByUser(currentUser);
            activePlan = userPlans.OrderByDescending(p => p.StartDate).FirstOrDefault();

            // Provjeri ima li treninzima za danas
            if (activePlan != null)
            {
                var todayWorkouts = await WorkoutPlanService.GetOrGenerateWorkoutsForToday(currentUser);
                hasTodayWorkouts = todayWorkouts.Any();
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading dashboard: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoToTraining()
    {
        var url = $"/workouts/daily-training?userId={currentUser?.Id}&userName={currentUserName}";
        NavigationManager.NavigateTo(url);
    }

    private void GoToHistory()
    {
        var url = $"/workouts/training-history?userId={currentUser?.Id}&userName={currentUserName}";
        NavigationManager.NavigateTo(url);
    }

    private void GoToPlans()
    {
        var url = $"/my-plan/my-plans?userId={currentUser?.Id}&userName={currentUserName}";
        NavigationManager.NavigateTo(url);
    }
}